-- vim: ft=sql expandtab

PARAMETER avg_window {seconds} DEFAULTS TO 60.0;

-- TCP

DEFINE c2s_tcp AS
  FROM ../../../csv/tcp
  WHERE zone_client <> zone_client
  SELECT
    start, stop,
    -- In this table we consider that the client is source and the client dest.
    -- We will compute the other way around in s2c_tcp.
    zone_server AS zone_dst,
    traffic_packets_client AS traffic_packets_src,
    traffic_packets_server AS traffic_packets_dst,
    traffic_bytes_client AS traffic_bytes_src,
    traffic_bytes_server AS traffic_bytes_dst,
    payload_bytes_client AS payload_bytes_src,
    payload_bytes_server AS payload_bytes_dst,
    payload_packets_client AS payload_packets_src,
    payload_packets_server AS payload_packets_dst,
    retrans_traffic_bytes_client AS retrans_traffic_bytes_src,
    retrans_traffic_bytes_server AS retrans_traffic_bytes_dst,
    retrans_payload_bytes_client AS retrans_payload_bytes_src,
    retrans_payload_bytes_server AS retrans_payload_bytes_dst,
    fin_count_client AS fin_count_src,
    fin_count_server AS fin_count_dst,
    rst_count_client AS rst_count_src,
    rst_count_server AS rst_count_dst,
    dupack_count_client AS dupack_count_src,
    dupack_count_server AS dupack_count_dst,
    zero_window_count_client AS zero_window_count_src,
    zero_window_count_server AS zero_window_count_dst,
    rtt_count_client AS rtt_count_src,
    rtt_count_server AS rtt_count_dst,
    rtt_sum_client AS rtt_sum_src,
    rtt_sum_server AS rtt_sum_dst,
    rtt_square_sum_client AS rtt_square_sum_src,
    rtt_square_sum_server AS rtt_square_sum_dst,
    rd_count_client AS rd_count_src,
    rd_count_server AS rd_count_dst,
    rd_sum_client AS rd_sum_src,
    rd_sum_server AS rd_sum_dst,
    rd_square_sum_client AS rd_square_sum_src,
    rd_square_sum_server AS rd_square_sum_dst,
    dtt_count_client AS dtt_count_src,
    dtt_count_server AS dtt_count_dst,
    dtt_sum_client AS dtt_sum_src,
    dtt_sum_server AS dtt_sum_dst,
    dtt_square_sum_client AS dtt_square_sum_src,
    dtt_square_sum_server AS dtt_square_sum_dst,
    syn_count_client AS syn_count_src,
    0u32 AS syn_count_dst,
    -- Those are significant for both directions regardless of where is the client:
    timeout_count, close_count, ct_count, ct_sum, ct_square_sum,
    0u32 AS icmp_error_count;

DEFINE s2c_tcp AS
  FROM ../../../csv/tcp
  WHERE zone_client <> zone_client
  SELECT
    start, stop,
    zone_client AS zone_dst,
    traffic_packets_server AS traffic_packets_src,
    traffic_packets_client AS traffic_packets_dst,
    traffic_bytes_server AS traffic_bytes_src,
    traffic_bytes_client AS traffic_bytes_dst,
    payload_bytes_server AS payload_bytes_src,
    payload_bytes_client AS payload_bytes_dst,
    payload_packets_server AS payload_packets_src,
    payload_packets_client AS payload_packets_dst,
    retrans_traffic_bytes_server AS retrans_traffic_bytes_src,
    retrans_traffic_bytes_client AS retrans_traffic_bytes_dst,
    retrans_payload_bytes_server AS retrans_payload_bytes_src,
    retrans_payload_bytes_client AS retrans_payload_bytes_dst,
    fin_count_server AS fin_count_src,
    fin_count_client AS fin_count_dst,
    rst_count_server AS rst_count_src,
    rst_count_client AS rst_count_dst,
    dupack_count_server AS dupack_count_src,
    dupack_count_client AS dupack_count_dst,
    zero_window_count_server AS zero_window_count_src,
    zero_window_count_client AS zero_window_count_dst,
    rtt_count_server AS rtt_count_src,
    rtt_count_client AS rtt_count_dst,
    rtt_sum_server AS rtt_sum_src,
    rtt_sum_client AS rtt_sum_dst,
    rtt_square_sum_server AS rtt_square_sum_src,
    rtt_square_sum_client AS rtt_square_sum_dst,
    rd_count_server AS rd_count_src,
    rd_count_client AS rd_count_dst,
    rd_sum_server AS rd_sum_src,
    rd_sum_client AS rd_sum_dst,
    rd_square_sum_server AS rd_square_sum_src,
    rd_square_sum_client AS rd_square_sum_dst,
    dtt_count_server AS dtt_count_src,
    dtt_count_client AS dtt_count_dst,
    dtt_sum_server AS dtt_sum_src,
    dtt_sum_client AS dtt_sum_dst,
    dtt_square_sum_server AS dtt_square_sum_src,
    dtt_square_sum_client AS dtt_square_sum_dst,
    0u32 AS syn_count_src,
    syn_count_client AS syn_count_dst,
    timeout_count, close_count, ct_count, ct_sum, ct_square_sum,
    0u32 AS icmp_error_count;

-- UDP

DEFINE c2s_udp AS
  FROM ../../../csv/udp
  WHERE zone_client <> zone_client
  SELECT
    start, stop,
    zone_server AS zone_dst,
    traffic_packets_client AS traffic_packets_src,
    traffic_packets_server AS traffic_packets_dst,
    traffic_bytes_client AS traffic_bytes_src,
    traffic_bytes_server AS traffic_bytes_dst,
    payload_bytes_client AS payload_bytes_src,
    payload_bytes_server AS payload_bytes_dst,
    payload_packets_client AS payload_packets_src,
    payload_packets_server AS payload_packets_dst,
    0u64 AS retrans_traffic_bytes_src, 0u64 AS retrans_traffic_bytes_dst,
    0u64 AS retrans_payload_src, 0u64 AS retrans_payload_bytes_dst,
    0u32 AS fin_count_src, 0u32 AS fin_count_dst,
    0u32 AS rst_count_src, 0u32 AS rst_count_dst,
    0u32 AS dupack_count_src, 0u32 AS dupack_count_dst,
    0u32 AS zero_windows_src, 0u32 AS zero_windows_dst,
    0u32 AS rtt_count_src, 0u32 AS rtt_count_dst,
    0. AS rtt_sum_src, 0. AS rtt_sum_dst,
    0. AS rtt_square_sum_src, 0. AS rtt_square_sum_dst,
    0u32 AS rd_count_src, 0u32 AS rd_count_dst,
    0. AS rd_sum_src, 0. AS rd_sum_dst,
    0. AS rd_square_sum_src, 0. AS rd_square_sum_dst,
    0u32 AS dtt_count_src, 0u32 AS dtt_count_dst,
    0. AS dtt_sum_src, 0. AS dtt_sum_dst,
    0. AS dtt_square_sum_src, 0. AS dtt_square_sum_dst,
    0u32 AS syn_count_src, 0u32 AS syn_count_dst,
    0u32 AS timeout_count, 0u32 AS close_count,
    0u32 AS ct_count, 0. AS ct_sum, 0. AS ct_square_sum,
    0u32 AS icmp_error_count;

DEFINE s2c_udp AS
  FROM ../../../csv/udp
  WHERE zone_client <> zone_client
  SELECT
    start, stop,
    zone_client AS zone_dst,
    traffic_packets_server AS traffic_packets_src,
    traffic_packets_client AS traffic_packets_dst,
    traffic_bytes_server AS traffic_bytes_src,
    traffic_bytes_client AS traffic_bytes_dst,
    payload_bytes_server AS payload_bytes_src,
    payload_bytes_client AS payload_bytes_dst,
    payload_packets_server AS payload_packets_src,
    payload_packets_client AS payload_packets_dst,
    0u64 AS retrans_traffic_bytes_src, 0u64 AS retrans_traffic_bytes_dst,
    0u64 AS retrans_payload_bytes_src, 0u64 AS retrans_payload_bytes_dst,
    0u32 AS fin_count_src, 0u32 AS fin_count_dst,
    0u32 AS rst_count_src, 0u32 AS rst_count_dst,
    0u32 AS dupack_count_src, 0u32 AS dupack_count_dst,
    0u32 AS zero_windows_src, 0u32 AS zero_windows_dst,
    0u32 AS rtt_count_src, 0u32 AS rtt_count_dst,
    0. AS rtt_sum_src, 0. AS rtt_sum_dst,
    0. AS rtt_square_sum_src, 0. AS rtt_square_sum_dst,
    0u32 AS rd_count_src, 0u32 AS rd_count_dst,
    0. AS rd_sum_src, 0. AS rd_sum_dst,
    0. AS rd_square_sum_src, 0. AS rd_square_sum_dst,
    0u32 AS dtt_count_src, 0u32 AS dtt_count_dst,
    0. AS dtt_sum_src, 0. AS dtt_sum_dst,
    0. AS dtt_square_sum_src, 0. AS dtt_square_sum_dst,
    0u32 AS syn_count_src, 0u32 AS syn_count_dst,
    0u32 AS timeout_count, 0u32 AS close_count,
    0u32 AS ct_count, 0. AS ct_sum, 0. AS ct_square_sum,
    0u32 AS icmp_error_count;

-- ICMP

DEFINE c2s_icmp AS
  FROM ../../../csv/icmp
  WHERE zone_client <> zone_client
  SELECT
    start, stop,
    zone_server AS zone_dst,
    traffic_packets_client AS traffic_packets_src,
    traffic_packets_server AS traffic_packets_dst,
    traffic_bytes_client AS traffic_bytes_src,
    traffic_bytes_server AS traffic_bytes_dst,
    payload_bytes_client AS payload_bytes_src,
    payload_bytes_server AS payload_bytes_dst,
    payload_packets_client AS payload_packets_src,
    payload_packets_server AS payload_packets_dst,
    0u64 AS retrans_traffic_bytes_src, 0u64 AS retrans_traffic_bytes_dst,
    0u64 AS retrans_payload_bytes_src, 0u64 AS retrans_payload_bytes_dst,
    0u32 AS fin_count_src, 0u32 AS fin_count_dst,
    0u32 AS rst_count_src, 0u32 AS rst_count_dst,
    0u32 AS dupack_count_src, 0u32 AS dupack_count_dst,
    0u32 AS zero_windows_src, 0u32 AS zero_windows_dst,
    0u32 AS rtt_count_src, 0u32 AS rtt_count_dst,
    0. AS rtt_sum_src, 0. AS rtt_sum_dst,
    0. AS rtt_square_sum_src, 0. AS rtt_square_sum_dst,
    0u32 AS rd_count_src, 0u32 AS rd_count_dst,
    0. AS rd_sum_src, 0. AS rd_sum_dst,
    0. AS rd_square_sum_src, 0. AS rd_square_sum_dst,
    0u32 AS dtt_count_src, 0u32 AS dtt_count_dst,
    0. AS dtt_sum_src, 0. AS dtt_sum_dst,
    0. AS dtt_square_sum_src, 0. AS dtt_square_sum_dst,
    0u32 AS syn_count_src, 0u32 AS syn_count_dst,
    0u32 AS timeout_count, 0u32 AS close_count,
    0u32 AS ct_count, 0. AS ct_sum, 0. AS ct_square_sum,
    u32(error_ip4_client IS NOT NULL OR error_ip6_client IS NOT NULL OR
        error_ip4_server IS NOT NULL OR error_ip6_server IS NOT NULL OR
        error_port_client IS NOT NULL OR error_port_server IS NOT NULL OR
        error_ip_proto IS NOT NULL) AS icmp_error_count;

DEFINE s2c_icmp AS
  FROM ../../../csv/icmp
  WHERE zone_client <> zone_client
  SELECT
    start, stop,
    zone_client AS zone_dst,
    traffic_packets_server AS traffic_packets_src,
    traffic_packets_client AS traffic_packets_dst,
    traffic_bytes_server AS traffic_bytes_src,
    traffic_bytes_client AS traffic_bytes_dst,
    payload_bytes_server AS payload_bytes_src,
    payload_bytes_client AS payload_bytes_dst,
    payload_packets_server AS payload_packets_src,
    payload_packets_client AS payload_packets_dst,
    0u64 AS retrans_traffic_bytes_src, 0u64 AS retrans_traffic_bytes_dst,
    0u64 AS retrans_payload_bytes_src, 0u64 AS retrans_payload_bytes_dst,
    0u32 AS fin_count_src, 0u32 AS fin_count_dst,
    0u32 AS rst_count_src, 0u32 AS rst_count_dst,
    0u32 AS dupack_count_src, 0u32 AS dupack_count_dst,
    0u32 AS zero_windows_src, 0u32 AS zero_windows_dst,
    0u32 AS rtt_count_src, 0u32 AS rtt_count_dst,
    0. AS rtt_sum_src, 0. AS rtt_sum_dst,
    0. AS rtt_square_sum_src, 0. AS rtt_square_sum_dst,
    0u32 AS rd_count_src, 0u32 AS rd_count_dst,
    0. AS rd_sum_src, 0. AS rd_sum_dst,
    0. AS rd_square_sum_src, 0. AS rd_square_sum_dst,
    0u32 AS dtt_count_src, 0u32 AS dtt_count_dst,
    0. AS dtt_sum_src, 0. AS dtt_sum_dst,
    0. AS dtt_square_sum_src, 0. AS dtt_square_sum_dst,
    0u32 AS syn_count_src, 0u32 AS syn_count_dst,
    0u32 AS timeout_count, 0u32 AS close_count,
    0u32 AS ct_count, 0. AS ct_sum, 0. AS ct_square_sum,
    u32(error_ip4_client IS NOT NULL OR error_ip6_client IS NOT NULL OR
        error_ip4_server IS NOT NULL OR error_ip6_server IS NOT NULL OR
        error_port_client IS NOT NULL OR error_port_server IS NOT NULL OR
        error_ip_proto IS NOT NULL) AS icmp_error_count;

-- OtherIP

DEFINE c2s_other_ip AS
  FROM '../../../csv/other-ip'
  WHERE zone_client <> zone_client
  SELECT
    start, stop,
    zone_server AS zone_dst,
    traffic_packets_client AS traffic_packets_src,
    traffic_packets_server AS traffic_packets_dst,
    traffic_bytes_client AS traffic_bytes_src,
    traffic_bytes_server AS traffic_bytes_dst,
    payload_bytes_client AS payload_bytes_src,
    payload_bytes_server AS payload_bytes_dst,
    payload_packets_client AS payload_packets_src,
    payload_packets_server AS payload_packets_dst,
    0u64 AS retrans_traffic_bytes_src, 0u64 AS retrans_traffic_bytes_dst,
    0u64 AS retrans_payload_bytes_src, 0u64 AS retrans_payload_bytes_dst,
    0u32 AS fin_count_src, 0u32 AS fin_count_dst,
    0u32 AS rst_count_src, 0u32 AS rst_count_dst,
    0u32 AS dupack_count_src, 0u32 AS dupack_count_dst,
    0u32 AS zero_windows_src, 0u32 AS zero_windows_dst,
    0u32 AS rtt_count_src, 0u32 AS rtt_count_dst,
    0. AS rtt_sum_src, 0. AS rtt_sum_dst,
    0. AS rtt_square_sum_src, 0. AS rtt_square_sum_dst,
    0u32 AS rd_count_src, 0u32 AS rd_count_dst,
    0. AS rd_sum_src, 0. AS rd_sum_dst,
    0. AS rd_square_sum_src, 0. AS rd_square_sum_dst,
    0u32 AS dtt_count_src, 0u32 AS dtt_count_dst,
    0. AS dtt_sum_src, 0. AS dtt_sum_dst,
    0. AS dtt_square_sum_src, 0. AS dtt_square_sum_dst,
    0u32 AS syn_count_src, 0u32 AS syn_count_dst,
    0u32 AS timeout_count, 0u32 AS close_count,
    0u32 AS ct_count, 0. AS ct_sum, 0. AS ct_square_sum,
    0u32 AS icmp_error_count;

DEFINE s2c_other_ip AS
  FROM '../../../csv/other-ip'
  WHERE zone_client <> zone_client
  SELECT
    start, stop,
    zone_client AS zone_dst,
    traffic_packets_server AS traffic_packets_src,
    traffic_packets_client AS traffic_packets_dst,
    traffic_bytes_server AS traffic_bytes_src,
    traffic_bytes_client AS traffic_bytes_dst,
    payload_bytes_server AS payload_bytes_src,
    payload_bytes_client AS payload_bytes_dst,
    payload_packets_server AS payload_packets_src,
    payload_packets_client AS payload_packets_dst,
    0u64 AS retrans_traffic_bytes_src, 0u64 AS retrans_traffic_bytes_dst,
    0u64 AS retrans_payload_bytes_src, 0u64 AS retrans_payload_bytes_dst,
    0u32 AS fin_count_src, 0u32 AS fin_count_dst,
    0u32 AS rst_count_src, 0u32 AS rst_count_dst,
    0u32 AS dupack_count_src, 0u32 AS dupack_count_dst,
    0u32 AS zero_windows_src, 0u32 AS zero_windows_dst,
    0u32 AS rtt_count_src, 0u32 AS rtt_count_dst,
    0. AS rtt_sum_src, 0. AS rtt_sum_dst,
    0. AS rtt_square_sum_src, 0. AS rtt_square_sum_dst,
    0u32 AS rd_count_src, 0u32 AS rd_count_dst,
    0. AS rd_sum_src, 0. AS rd_sum_dst,
    0. AS rd_square_sum_src, 0. AS rd_square_sum_dst,
    0u32 AS dtt_count_src, 0u32 AS dtt_count_dst,
    0. AS dtt_sum_src, 0. AS dtt_sum_dst,
    0. AS dtt_square_sum_src, 0. AS dtt_square_sum_dst,
    0u32 AS syn_count_src, 0u32 AS syn_count_dst,
    0u32 AS timeout_count, 0u32 AS close_count,
    0u32 AS ct_count, 0. AS ct_sum, 0. AS ct_square_sum,
    0u32 AS icmp_error_count;

-- NonIP

DEFINE c2s_non_ip AS
  FROM '../../../csv/non-ip'
  WHERE zone_client <> zone_client
  SELECT
    start, stop,
    zone_server AS zone_dst,
    traffic_packets_client AS traffic_packets_src,
    traffic_packets_server AS traffic_packets_dst,
    traffic_bytes_client AS traffic_bytes_src,
    traffic_bytes_server AS traffic_bytes_dst,
    payload_bytes_client AS payload_bytes_src,
    payload_bytes_server AS payload_bytes_dst,
    payload_packets_client AS payload_packets_src,
    payload_packets_server AS payload_packets_dst,
    0u64 AS retrans_traffic_bytes_src, 0u64 AS retrans_traffic_bytes_dst,
    0u64 AS retrans_payload_bytes_src, 0u64 AS retrans_payload_bytes_dst,
    0u32 AS fin_count_src, 0u32 AS fin_count_dst,
    0u32 AS rst_count_src, 0u32 AS rst_count_dst,
    0u32 AS dupack_count_src, 0u32 AS dupack_count_dst,
    0u32 AS zero_windows_src, 0u32 AS zero_windows_dst,
    0u32 AS rtt_count_src, 0u32 AS rtt_count_dst,
    0. AS rtt_sum_src, 0. AS rtt_sum_dst,
    0. AS rtt_square_sum_src, 0. AS rtt_square_sum_dst,
    0u32 AS rd_count_src, 0u32 AS rd_count_dst,
    0. AS rd_sum_src, 0. AS rd_sum_dst,
    0. AS rd_square_sum_src, 0. AS rd_square_sum_dst,
    0u32 AS dtt_count_src, 0u32 AS dtt_count_dst,
    0. AS dtt_sum_src, 0. AS dtt_sum_dst,
    0. AS dtt_square_sum_src, 0. AS dtt_square_sum_dst,
    0u32 AS syn_count_src, 0u32 AS syn_count_dst,
    0u32 AS timeout_count, 0u32 AS close_count,
    0u32 AS ct_count, 0. AS ct_sum, 0. AS ct_square_sum,
    0u32 AS icmp_error_count;

DEFINE s2c_non_ip AS
  FROM '../../../csv/non-ip'
  WHERE zone_client <> zone_client
  SELECT
    start, stop,
    zone_client AS zone_dst,
    traffic_packets_server AS traffic_packets_src,
    traffic_packets_client AS traffic_packets_dst,
    traffic_bytes_server AS traffic_bytes_src,
    traffic_bytes_client AS traffic_bytes_dst,
    payload_bytes_server AS payload_bytes_src,
    payload_bytes_client AS payload_bytes_dst,
    payload_packets_server AS payload_packets_src,
    payload_packets_client AS payload_packets_dst,
    0u64 AS retrans_traffic_bytes_src, 0u64 AS retrans_traffic_bytes_dst,
    0u64 AS retrans_payload_bytes_src, 0u64 AS retrans_payload_bytes_dst,
    0u32 AS fin_count_src, 0u32 AS fin_count_dst,
    0u32 AS rst_count_src, 0u32 AS rst_count_dst,
    0u32 AS dupack_count_src, 0u32 AS dupack_count_dst,
    0u32 AS zero_windows_src, 0u32 AS zero_windows_dst,
    0u32 AS rtt_count_src, 0u32 AS rtt_count_dst,
    0. AS rtt_sum_src, 0. AS rtt_sum_dst,
    0. AS rtt_square_sum_src, 0. AS rtt_square_sum_dst,
    0u32 AS rd_count_src, 0u32 AS rd_count_dst,
    0. AS rd_sum_src, 0. AS rd_sum_dst,
    0. AS rd_square_sum_src, 0. AS rd_square_sum_dst,
    0u32 AS dtt_count_src, 0u32 AS dtt_count_dst,
    0. AS dtt_sum_src, 0. AS dtt_sum_dst,
    0. AS dtt_square_sum_src, 0. AS dtt_square_sum_dst,
    0u32 AS syn_count_src, 0u32 AS syn_count_dst,
    0u32 AS timeout_count, 0u32 AS close_count,
    0u32 AS ct_count, 0. AS ct_sum, 0. AS ct_square_sum,
    0u32 AS icmp_error_count;

-- Finally:

DEFINE traffic
  "Traffic characteristics per destination zone."
AS
  FROM
    c2s_tcp, s2c_tcp,
    c2s_udp, s2c_udp,
    c2s_icmp, s2c_icmp,
    c2s_other_ip, s2c_other_ip,
    c2s_non_ip, s2c_non_ip
  MERGE TIMEOUT AFTER 5s
  WHERE
    start > merge.greatest.start - 3min
  SELECT
    -- Time
    (start // u32(avg_window)) * u32(avg_window) AS start,
    out.start + avg_window AS stop,
    zone_dst DOC "Destination Zone",
    -- Volumes
    sum traffic_bytes_src / avg_window AS c2s_bytes_per_sec
      "Bytes per second flowing from sources to destinations.",
    sum traffic_bytes_dst / avg_window AS s2c_bytes_per_sec
      "Bytes per second flowing from destinations to sources.",
    sum traffic_packets_src / avg_window AS c2s_packets_per_sec
      "Packets per second flowing from sources to destinations.",
    sum traffic_packets_dst / avg_window AS s2c_packets_per_sec
      "Packets per second flowing from destinations to sources.",
    -- Retransmissions
    sum retrans_traffic_bytes_src / avg_window AS c2s_retrans_traffic_bytes_per_sec
      "Bytes per second retransferred from sources to destinations.",
    sum retrans_traffic_bytes_dst / avg_window AS s2c_retrans_traffic_bytes_per_sec
      "Bytes per second retransferred from destinations to sources.",
    -- TCP flags
    sum syn_count_src / avg_window AS c2s_syns_per_sec
      "SYN flag per second",
    sum fin_count_src / avg_window AS c2s_fins_per_sec
      "FIN flags from sources to destinations per second.",
    sum fin_count_dst / avg_window AS s2c_fins_per_sec
      "FIN flags from destinations to sources per second.",
    sum rst_count_src / avg_window AS c2s_rsts_per_sec
      "RST flags from sources to destinations per second.",
    sum rst_count_dst / avg_window AS s2c_rsts_per_sec
      "RST flags from destinations to sources per second.",
    sum close_count / avg_window AS close_per_sec
      "Connection teardowns per second.",
    -- TCP issues
    sum dupack_count_src / avg_window AS c2s_dupack_count_per_sec
      "DupAcks per second from sources to destinations.",
    sum dupack_count_dst / avg_window AS s2c_dupack_count_per_sec
      "DupAcks per second from destinations to sources.",
    -- Average Connection Time
    sum ct_count AS _sum_ct_count,
    sum ct_sum AS _sum_ct_sum,
    _sum_ct_count / avg_window AS ct_per_sec
      "Connection establishments per second.",
    IF _sum_ct_count = 0 THEN 0 ELSE
      _sum_ct_sum / _sum_ct_count AS ct_avg
      "Average connection time.",
    IF _sum_ct_count = 0 THEN 0 ELSE
      sqrt (((sum ct_square_sum - _sum_ct_sum^2) / _sum_ct_count)) AS ct_stddev
      "Standard deviation of the connection time.",
    -- Average Round Trip Time CSC
    sum rtt_count_dst AS _sum_rtt_count_dst,
    sum rtt_sum_dst AS _sum_rtt_sum_dst,
    _sum_rtt_count_dst / avg_window AS crtt_per_sec
      "Measured source→destination→source round trip times per second.",
    IF _sum_rtt_count_dst = 0 THEN 0 ELSE
      _sum_rtt_sum_dst / _sum_rtt_count_dst AS crtt_avg
      "Average source→destination→source round trip time.",
    IF _sum_rtt_count_dst = 0 THEN 0 ELSE
      sqrt ((sum rtt_square_sum_dst - _sum_rtt_sum_dst^2) /
            _sum_rtt_count_dst) AS crtt_stddev
      "Standard deviation of the source→destination→source round trip time.",
    -- Average Round Trip Time SCS
    sum rtt_count_src AS _sum_rtt_count_src,
    sum rtt_sum_src AS _sum_rtt_sum_src,
    _sum_rtt_count_src / avg_window AS srtt_per_sec
      "Measured destination→source→destination round trip times per second.",
    IF _sum_rtt_count_src = 0 THEN 0 ELSE
      _sum_rtt_sum_src / _sum_rtt_count_src AS srtt_avg
      "Average destination→source→destination round trip time.",
    IF _sum_rtt_count_src = 0 THEN 0 ELSE
      sqrt ((sum rtt_square_sum_src - _sum_rtt_sum_src^2) /
            _sum_rtt_count_src) AS srtt_stddev
      "Standard deviation of the destination→source→destination round trip time.",
    -- Average Retransmission Delay C2S
    sum rd_count_src AS _sum_rd_count_src,
    sum rd_sum_src AS _sum_rd_sum_src,
    _sum_rd_count_src / avg_window AS crd_per_sec
      "Measured retransmission delays per second.",
    IF _sum_rd_count_src = 0 THEN 0 ELSE
      _sum_rd_sum_src / _sum_rd_count_src AS crd_avg
      "Average retransmission delay.",
    IF _sum_rd_count_src = 0 THEN 0 ELSE
      sqrt ((sum rd_square_sum_src - _sum_rd_sum_src^2) /
            _sum_rd_count_src) AS crd_stddev
      "Standard deviation of the retransmission delays.",
    -- Average Retransmission Delay S2C
    sum rd_count_dst AS _sum_rd_count_dst,
    sum rd_sum_dst AS _sum_rd_sum_dst,
    _sum_rd_count_dst / avg_window AS srd_per_sec
      "Measured sources to destinations retransmission delays per second.",
    IF _sum_rd_count_dst = 0 THEN 0 ELSE
      _sum_rd_sum_dst / _sum_rd_count_dst AS srd_avg
      "Average sources to destinations retransmission delay.",
    IF _sum_rd_count_dst = 0 THEN 0 ELSE
      sqrt ((sum rd_square_sum_dst - _sum_rd_sum_dst^2) /
            _sum_rd_count_dst) AS srd_stddev
      "Standard deviation of the sources to destinations retransmission delay.",
    -- Average Data Transfer Time C2S
    sum dtt_count_src AS _sum_dtt_count_src,
    sum dtt_sum_src AS _sum_dtt_sum_src,
    _sum_dtt_count_src / avg_window AS cdtt_per_sec
      "Measured sources to destinations data transfer time per second.",
    IF _sum_dtt_count_src = 0 THEN 0 ELSE
      _sum_dtt_sum_src / _sum_dtt_count_src AS cdtt_avg
      "Average sources to destinations data transfer time.",
    IF _sum_dtt_count_src = 0 THEN 0 ELSE
      sqrt ((sum dtt_square_sum_src - _sum_dtt_sum_src^2) /
            _sum_dtt_count_src) AS cdtt_stddev
      "Standard deviation of the sources to destinations data transfer time.",
    -- Average Data Transfer Time S2C
    sum dtt_count_dst AS _sum_dtt_count_dst,
    sum dtt_sum_dst AS _sum_dtt_sum_dst,
    _sum_dtt_count_dst / avg_window AS sdtt_per_sec
      "Measured destinations to sources data transfer time per second.",
    IF _sum_dtt_count_dst = 0 THEN 0 ELSE
      _sum_dtt_sum_dst / _sum_dtt_count_dst AS sdtt_avg
      "Average destinations to sources data transfer time.",
    IF _sum_dtt_count_dst = 0 THEN 0 ELSE
      sqrt ((sum dtt_square_sum_dst - _sum_dtt_sum_dst^2) /
            _sum_dtt_count_dst) AS sdtt_stddev
      "Standard deviation of the destinations to sources data transfer time.",
    -- Errors
    -- As soon as we handle factors in set-alerts (ie. either select one value or
    -- sum all values or take the min or max) then also group by icmp_type and code.
    sum u32(icmp_error_count) AS icmp_errors_per_sec
      "ICMP errors per second."
  GROUP BY start // u32(avg_window), zone_dst
  COMMIT AFTER
    in.start > out.start + 2 * avg_window
  FACTOR zone_dst;

